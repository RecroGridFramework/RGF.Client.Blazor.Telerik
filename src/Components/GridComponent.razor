
<RgfGridComponent @ref="_rgfGridRef" EntityParameters="EntityParameters" GridComponent="this">
    <GridTemplate Context="RgfGrid">
        @if (_initialized)
        {
            <TelerikGrid @ref="_gridRef" TItem="RgfDynamicDictionary" Data="RgfGrid.GridData"
                         Class="grid-no-scroll" Width="auto"
                         Resizable="true" Sortable="true" SortMode="SortMode.Multiple" Reorderable="true"
                         OnRowRender="OnRowRender"
                         OnStateInit="OnStateInit" OnStateChanged="OnStateChanged"
                         SelectionMode="GridSelectionMode.Single" SelectedItems="RgfGrid.SelectedItems"
                         OnRowClick="OnRowClick" OnRowDoubleClick="OnRowDoubleClick">
                <GridColumns>
                    @foreach (var prop in EntityDesc.SortedVisibleColumns)
                    {
                        <GridColumn Field="@prop.Alias" Id="@prop.ClientName" Title="@prop.ColTitle"
                                    Sortable="@prop.Orderable"
                                    Width="@(prop.ColWidth > 0 ? $"{prop.ColWidth}px" : null)"
                                    OnCellRender="(arg) => OnCellRender(prop, arg)">
                            <Template>
                                @RgfGrid.CreateGridColumn(prop, (RgfDynamicDictionary)context)
                            </Template>
                        </GridColumn>
                    }
                </GridColumns>
            </TelerikGrid>
        }
    </GridTemplate>

    <ColumnSettingsTemplate>
        <GridColumnSettingsComponent BaseGridComponent="context" />
    </ColumnSettingsTemplate>
</RgfGridComponent>

@code {

    [Parameter, EditorRequired]
    public RgfEntityParameters EntityParameters { get; set; } = null!;

    private IRgManager Manager => EntityParameters.Manager!;
    private RgfGridParameters GridParameters { get => EntityParameters.GridParameters; }
}